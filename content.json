{"meta":{"title":"聂文强的个人博客","subtitle":null,"description":"在最好的时光，做想做的梦，去想去的地方","author":"聂文强","url":""},"pages":[{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2019-05-21T15:20:54.393Z","comments":false,"path":"bangumi/index.html","permalink":"/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2019-05-19T15:57:16.911Z","comments":false,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"[残翼の黑猫] 与&nbsp; BrokenWings&nbsp; （ 轮入道 ） 对话中... function bot_ui_ini() { var botui = new BotUI(\"hello-mashiro\"); botui.message.add({ delay: 800, content: \"Hi, there👋\" }).then(function () { botui.message.add({ delay: 1100, content: \"这里是 BrokenWings\" }).then(function () { botui.message.add({ delay: 1100, content: \"一个可爱的蓝孩子~\" }).then(function () { botui.action.button({ delay: 1600, action: [{ text: \"然后呢？ 😃\", value: \"sure\" }, { text: \"少废话！ 🙄\", value: \"skip\" }] }).then(function (a) { \"sure\" == a.value && sure(); \"skip\" == a.value && end() }) }) }) }); var sure = function () { botui.message.add({ delay: 600, content: \"😘\" }).then(function () { secondpart() }) }, end = function () { botui.message.add({ delay: 600, content: \"![...](https://view.moezx.cc/images/2018/05/06/a1c4cd0452528b572af37952489372b6.md.jpg)\" }) }, secondpart = function () { botui.message.add({ delay: 1500, content: \"目前是一个java攻城狮\" }).then(function () { botui.message.add({ delay: 1500, content: \"向往技术，但时间窘迫\" }).then(function () { botui.message.add({ delay: 1200, content: \"快奔三的人了，还是一个码农\" }).then(function () { botui.message.add({ delay: 1500, content: \"主攻 JAVA和数据，略懂Hadoop，偶尔也折腾 HTML/CSS/JavaScript\" }).then(function () { botui.message.add({ delay: 1500, content: \"博客也是新搭建的，希望各位朋友多多指教\" }).then(function () { botui.message.add({ delay: 1800, content: \"喜欢动漫游戏，也热爱旅游\" }).then(function () { botui.action.button({ delay: 1100, action: [{ text: \"为什么叫BrokenWings呢？ 🤔\", value: \"why-BrokenWings\" }] }).then(function (a) { thirdpart() }) }) }) }) }) }) }) }, thirdpart = function () { botui.message.add({ delay: 1E3, content: \"BrokenWings来源一部动漫-圣魔之血的片尾曲，有兴趣的朋友可以去看看~\" }).then(function () { botui.action.button({ delay: 1500, action: [{ text: \"你喜欢猫吗？ 🤔\", value: \"why-cat\" }] }).then(function (a) { fourthpart() }) }) }, fourthpart = function () { botui.message.add({ delay: 1E3, content: \"当然喜欢，家里养过几只猫了… \" }).then(function () { botui.message.add({ delay: 1100, content: \"并且都是黑色的，像地狱少女里的轮入道和死神里面的夜一猫形态一样！\" }).then(function () { botui.action.button({ delay: 1500, action: [{ text: \"这博客是你自己独立制作的吗？(ง •_•)ง\", value: \"why-domain\" }] }).then(function (a) { fifthpart() }) }) }) }, fifthpart = function () { botui.message.add({ delay: 1E3, content: \"emmmm，本人是学java后端的，对前端技术掌握有限呢，特别感谢hojun，我是看他的blog教学才能搭建出来的\" }).then(function () { botui.message.add({ delay: 1600, content: \"有什么做得不好的地方还请多多指教 ^_^\" }) }) } } bot_ui_ini()","keywords":"关于"},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2019-05-15T23:39:12.000Z","comments":false,"path":"client/index.html","permalink":"/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2019-05-15T23:39:12.000Z","comments":true,"path":"comment/index.html","permalink":"/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2019-05-23T07:26:03.576Z","comments":false,"path":"music/index.html","permalink":"/music/index.html","excerpt":"","text":"","keywords":"喜欢的音乐"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2019-05-15T23:39:12.000Z","comments":false,"path":"donate/index.html","permalink":"/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2019-05-15T23:39:12.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2019-05-15T23:39:12.000Z","comments":false,"path":"lab/index.html","permalink":"/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2019-05-15T23:39:12.000Z","comments":true,"path":"links/index.html","permalink":"/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2019-05-15T23:39:12.000Z","comments":true,"path":"rss/index.html","permalink":"/rss/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2019-05-15T23:39:12.000Z","comments":true,"path":"tags/index.html","permalink":"/tags/index.html","excerpt":"","text":""},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2019-05-15T23:39:12.000Z","comments":false,"path":"video/index.html","permalink":"/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"}],"posts":[{"title":"Lambda表达式","slug":"Lambda表达式","date":"2019-07-07T12:25:00.000Z","updated":"2019-07-12T01:46:55.170Z","comments":true,"path":"2019/07/07/Lambda表达式/","link":"","permalink":"/2019/07/07/Lambda表达式/","excerpt":"","text":"JAVA中重要的函数接口 接口 参数 返回类型 示例 Predicate T boolean 任天堂是世界的主宰吗？ Consumer T void 输出一个值 Function&lt;T,R&gt; T R 获得saber对象的名字 Supplier None T 工厂方法 UnaryOperator T T 逻辑非（！） BinaryOperator （T，T） T 求两个数的乘积（*） 常用的流操作返回值是Stream就是惰性求值，反之是及早求值 collect(Collectors.toList()) 由Stream里的值生成一个List，是一个及早求值得操作 List&lt;String&gt; collect = Stream.of(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;) .collect(Collectors.toList()); map 可以将一个流中的值转换成一个新的流 List&lt;String&gt; collect = Stream.of(&quot;a&quot;, &quot;b&quot;, &quot;c&quot;) .map(s -&gt; s.toUpperCase()) .collect(Collectors.toList()); T -&gt; Function -&gt; R filter 便利数据并检查其中的元素 List&lt;String&gt; collect = Stream.of(&quot;ac&quot;, &quot;bd&quot;, &quot;cn&quot;) .filter(s -&gt; s.contains(&quot;b&quot;)) .collect(Collectors.toList()); T -&gt; Predicate -&gt;boolean flatMap 和map类似，可以将多个Stream连接成一个Stream List&lt;Integer&gt; together = Stream.of(asList(1, 2), asList(3, 4)) .flatMap(num -&gt; num.stream()) .collect(Collectors.toList()); max和min 取最大值最小值 List&lt;Track&gt; tracks = asList(new Track(&quot;Bakai&quot;, 524), new Track(&quot;Viltel&quot;, 378), new Track(&quot;Timewas&quot;, 451)); Optional&lt;Track&gt; t = tracks.stream() .min(Comparator.comparing(track -&gt;track.getLength())); Track track = t.get(); reduce 可以实现从一组值中生成一个新的值 Integer reduce = Stream.of(1, 2, 3) .reduce(0, (acc, element) -&gt; acc + element); 方法引用old: artist -&gt; artist.getName()new: Artist::getName方法引用是一种引用方法的轻量级语法，如:ClassName:methodName","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"Docker入门","slug":"Docker入门","date":"2019-06-21T05:52:00.000Z","updated":"2019-06-14T06:53:55.328Z","comments":true,"path":"2019/06/21/Docker入门/","link":"","permalink":"/2019/06/21/Docker入门/","excerpt":"","text":"CentOS7安装Docker前提条件Docker 运行在 CentOS 7 上，要求系统为64位、系统内核版本为 3.10 以上。 使用 yum 安装（CentOS 7下）Docker 要求 CentOS 系统的内核版本高于 3.10 ，查看本页面的前提条件来验证你的CentOS 版本是否支持 Docker 。通过 uname -r 命令查看你当前的内核版本 安装 Docker从 2017 年 3 月开始 docker 在原来的基础上分为两个分支版本: Docker CE 和 Docker EEDocker CE 即社区免费版，Docker EE 即企业版，强调安全，但需付费使用。 移除旧的版本： sudo yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-engine 安装必须的软件包: 安装yum-utils，它提供一个yum-config-manager单元，同时安装的device-mapper-persistent-data和lvm2用于储存设备映射（devicemapper）必须的两个软件包。sudo yum install -y yum-utils device-mapper-persistent-data lvm2 紧接着配置一个稳定（stable）的仓库: 仓库配置会保存到/etc/yum.repos.d/docker-ce.repo文件中。sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo 更新Yum安装的相关Docke软件包: sudo yum makecache fast 安装Docker CE: sudo yum install docker-ce 设置随系统启动 systemctl enable docker.service 启动Docker sudo systemctl start docker 镜像加速鉴于国内网络问题，后续拉取 Docker 镜像十分缓慢，我们可以需要配置加速器来解决vi /etc/docker/daemon.json { &quot;registry-mirrors&quot;:[&quot;XXX&quot;], //镜像加速地址 &quot;insecure-registries&quot;: [&quot;10.0.91.129:8888&quot;] //Docker如果需要从非SSL源管理镜像，这里加上 } 国内较快的镜像(registry-mirrors)原地址：网易：http://hub-mirror.c.163.comdocker官方中国区：https://registry.docker-cn.com 使用阿里云加速器加快获取docker官方镜像： 注册阿里云 进入阿里云容器镜像服务 改完记得重新启动下docker服务systemctl restart docker 卸载Docker CE: 查询安装过的包yum list installed | grep docker 删除安装的软件包yum -y remove XXXXXX 删除镜像/容器等rm -rf /var/lib/docker","categories":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"}],"keywords":[{"name":"技术","slug":"技术","permalink":"/categories/技术/"}]},{"title":"Hello World","slug":"HelloWorld","date":"2019-05-19T14:16:00.000Z","updated":"2019-06-14T06:54:11.771Z","comments":false,"path":"2019/05/19/HelloWorld/","link":"","permalink":"/2019/05/19/HelloWorld/","excerpt":"","text":"一个java后端的blog之路正式开启","categories":[{"name":"生活","slug":"生活","permalink":"/categories/生活/"}],"tags":[{"name":"web","slug":"web","permalink":"/tags/web/"}],"keywords":[{"name":"生活","slug":"生活","permalink":"/categories/生活/"}]}]}